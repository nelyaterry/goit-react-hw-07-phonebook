{"version":3,"sources":["Components/App/App.styled.jsx","redux/contacts/contacts-selector.js","redux/contacts/contacts-actions.js","servises/contactsAPI.js","redux/contacts/contacts-operations.js","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.styled.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","redux/contacts/contacts-redusers.js","redux/store.js","index.js"],"names":["Title","styled","h1","SubTitle","h2","Phonebook","div","ContactBox","getItems","state","contacts","items","getFilter","filter","isLoading","loading","getVisibleContacts","createSelector","filterNormalized","toLowerCase","trim","name","includes","changeFilter","createAction","getContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","fetchContact","createAsyncThunk","contactsAPI","Button","button","ButtonText","children","onClick","Form","form","Label","label","InputName","span","Input","input","ContactForm","useState","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handelChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","alert","contactsOperations","type","pattern","title","required","onChange","ContacstList","ul","Contact","li","ContactName","ContactPhone","MessageNotFound","p","Contacts","useEffect","length","map","onDeleteContact","color","height","width","h3","Filter","contactsActions","target","App","createReducer","_","payload","fulfilled","pending","rejected","error","message","combineReducers","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44fdde85.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 64px;\r\n  margin: 24px 24px;\r\n  color: rgb(93 203 152);\r\n`;\r\nexport const SubTitle = styled.h2`\r\n  color: rgb(75, 75, 75);\r\n  margin: 0;\r\n`;\r\nexport const Phonebook = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContactBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  background-color: rgba(165, 230, 250, 0.3);\r\n  width: 65%;\r\n`;\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const isLoading = state => state.contacts.loading;\r\n\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getFilter],\r\n  (contacts, filter) => {\r\n    const filterNormalized = filter.toLowerCase().trim();\r\n\r\n    return contacts.filter(({name}) =>\r\n    name.toLowerCase().includes(filterNormalized),\r\n    );\r\n  },\r\n);\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction(\"contacts/UpdateFilter\");\r\n\r\n// //pending\r\n// export const fetchContactsRequest = createAction(\r\n//   \"contacts/fetchContactRequest\"\r\n// );\r\n// //fulfilled\r\n// export const fetchContactsSuccess = createAction(\r\n//   \"contacts/fetchContactSuccess\"\r\n// );\r\n// //rejected\r\n// export const fetchContactsError = createAction(\"contacts/fetchContactError\");\r\n\r\n// export const addContactsRequest = createAction(\"contacts/addContactRequest\");\r\n// export const addContactsSuccess = createAction(\"contacts/addContactSuccess\");\r\n// export const addContactsError = createAction(\"contacts/addContactError\");\r\n\r\n// export const deleteContactsRequest = createAction(\r\n//   \"contacts/deleteContactRequest\"\r\n// );\r\n// export const deleteContactsSuccess = createAction(\r\n//   \"contacts/deleteContactSuccess\"\r\n// );\r\n// export const deleteContactsError = createAction(\"contacts/deleteContactError\");\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://617e719b2ff7e600174bd7d5.mockapi.io/api/v1\";\r\n\r\nexport async function getContacts() {\r\n  const { data } = await axios.get(\"/contacts\");\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post(\"/contacts\", contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  const { data } = await axios.delete(`/contacts/${id}`);\r\n  return data;\r\n}\r\n","import * as contactsAPI from \"../../servises/contactsAPI\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContact = createAsyncThunk(\r\n  \"contacts/fetchContact\",\r\n  async () => {\r\n    const contacts = await contactsAPI.getContacts();\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  \"contacts/addContact\",\r\n  async (data) => {\r\n    const contacts = await contactsAPI.addContact(data);\r\n    return contacts;\r\n  }\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  \"contacts/deleteContact\",\r\n  async (id) => {\r\n    await contactsAPI.deleteContact(id);\r\n    return id;\r\n  }\r\n);\r\n\r\n// export const fetchContact = () => async (dispatch) => {\r\n//   dispatch(contactsActions.fetchContactsRequest());\r\n\r\n//   try {\r\n//     const contacts = await contactsAPI.getContacts();\r\n//     dispatch(contactsActions.fetchContactsSuccess(contacts));\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.fetchContactsError(error));\r\n//   }\r\n// };\r\n\r\n// export const addContact = (contact) => async (dispatch) => {\r\n//   dispatch(contactsActions.addContactsRequest());\r\n\r\n//   try {\r\n//     const data = await contactsAPI.addContact(contact);\r\n//     console.log(data);\r\n//     dispatch(contactsActions.addContactsSuccess(data));\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.addContactsError(error));\r\n//   }\r\n// };\r\n\r\n// export const deleteContact = (id) => async (dispatch) => {\r\n//   dispatch(contactsActions.deleteContactsRequest());\r\n\r\n//   try {\r\n//     await contactsAPI.deleteContact(id);\r\n//     dispatch(contactsActions.deleteContactsSuccess(id));\r\n//   } catch (error) {\r\n//     dispatch(contactsActions.deleteContactsError(error));\r\n//   }\r\n// };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  height: 50px;\r\n  padding: 12px 24px;\r\n  font-size: 18px;\r\n  color: white;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: #5DCB98;\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button.styled\";\r\n\r\nconst ButtonText = ({ children, onClick }) => {\r\n  return <Button onClick={onClick}>{children}</Button>;\r\n};\r\n\r\nButtonText.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ButtonText;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  padding: 24px 32px;\r\n  background-color: rgba(67, 67, 67, 0.3);\r\n\r\n  & > button {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const InputName = styled.span`\r\n  margin-bottom: 16px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 8px 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgba(228, 228, 228, 0.5);\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsSelectors, contactsOperations } from \"../../redux/contacts\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport { Form, Label, InputName, Input } from \"./ContactForm.styled\";\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contact = { name, number };\r\n\r\n  const contacts = useSelector(contactsSelectors.getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handelChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    if (name === \"name\") {\r\n      setName(value);\r\n    }\r\n    if (name === \"number\") {\r\n      setNumber(value);\r\n    }\r\n  };\r\n\r\n  const handelSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      contacts.some(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${name} is alredy in the contacts list`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContact(contact));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handelSubmit}>\r\n      <Label>\r\n        <InputName>Name</InputName>\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <Label>\r\n        <InputName>Number</InputName>\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handelChange}\r\n        />\r\n      </Label>\r\n\r\n      <ButtonText type=\"submit\">Add Contact</ButtonText>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContacstList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 12px;\r\n  margin-bottom: 12px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152 / 20%);\r\n`;\r\n\r\nexport const ContactName = styled.span`\r\n  width: 40%;\r\n  margin-right: 12px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const ContactPhone = styled.span`\r\n  margin-right: 12px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const MessageNotFound = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n","import { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport {\r\n  ContacstList,\r\n  Contact,\r\n  ContactName,\r\n  ContactPhone,\r\n  MessageNotFound,\r\n} from \"./Contacts.styled\";\r\n\r\nconst Contacts = () => {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const isLoading = useSelector(contactsSelectors.isLoading);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) =>\r\n    dispatch(contactsOperations.deleteContact(id));\r\n\r\n  useEffect(() => dispatch(contactsOperations.fetchContact()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {contacts.length > 0 ? (\r\n        <ContacstList>\r\n          {contacts.map(({ name, number, id }) => (\r\n            <Contact key={id}>\r\n              <ContactName>{name}</ContactName>\r\n              <ContactPhone>{number}</ContactPhone>\r\n              <ButtonText type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                Delete\r\n              </ButtonText>\r\n            </Contact>\r\n          ))}\r\n          {isLoading && (\r\n            <Loader type=\"Oval\" color=\"#5DCB98\" height={40} width={40} />\r\n          )}\r\n        </ContacstList>\r\n      ) : (\r\n        <MessageNotFound>Contact not found</MessageNotFound>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h3`\r\n  color: rgb(93 203 152);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  /* height: 40px; */\r\n  padding: 8px 24px;\r\n  margin-bottom: 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  /* background-color: rgba(228, 228, 228, 0.5); */\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsActions, contactsSelectors } from \"../../redux/contacts\";\r\n\r\nimport { Title, Input } from \"./Filter.styled\";\r\n\r\nconst Filter = () => {\r\n\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n   const dispatch  = useDispatch();\r\n\r\n const onChange = e => dispatch(contactsActions.changeFilter(e.target.value.trim()));\r\n\r\n  return (\r\n    <>\r\n      <Title>Find contact by name</Title>\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Filter","// import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Phonebook, Title, SubTitle, ContactBox } from \"./App.styled\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport Contacts from \"../Contacts/Contacts\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Title>Phonebook</Title>\r\n      <Phonebook>\r\n        <ContactForm />\r\n        <ContactBox>\r\n          <SubTitle>Contacts</SubTitle>\r\n          <Filter />\r\n          <Contacts />\r\n        </ContactBox>\r\n      </Phonebook>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { changeFilter } from \"./contacts-actions\";\r\nimport { fetchContact, addContact, deleteContact } from \"./contacts-operations\";\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [fetchContact.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContact.pending]: () => true,\r\n  [fetchContact.fulfilled]: () => false,\r\n  [fetchContact.rejected]: () => false,\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContact.rejected]: (_, { payload }) => payload.message,\r\n  [fetchContact.pending]: () => null,\r\n  [addContact.rejected]: (_, { payload }) => payload.message,\r\n  [addContact.pending]: () => null,\r\n  [deleteContact.rejected]: (_, { payload }) => payload.message,\r\n  [deleteContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-redusers\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => [...getDefaultMiddleware()],\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}